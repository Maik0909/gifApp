{"version":3,"sources":["components/AddCategory.js","components/GifGridItem.js","helpers/getGifs.js","components/GifGrid.js","hooks/useGifFetch.js","components/GifApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","event","preventDefault","trim","length","item","type","value","onChange","target","GifGridItem","id","title","image","className","key","src","getGifs","a","url","replace","fetch","response","json","data","map","images","downsized_medium","GifGrid","category","loading","state","setState","useEffect","then","setTimeout","console","log","useGifFetch","element","GifApp","categories","ReactDOM","render","document","getElementById"],"mappings":"uLA4BeA,EAzBK,SAAC,GAAoB,IAAnBC,EAAkB,EAAlBA,cAAkB,EAELC,mBAAS,IAFJ,mBAEjCC,EAFiC,KAEtBC,EAFsB,KAYpC,OACI,0BAAMC,SARO,SAAAC,GACjBA,EAAMC,iBACHJ,EAAWK,OAAOC,QAAU,GAAGR,GAAc,SAACS,GAAD,OAAUP,GAAV,mBAAwBO,OACxEN,EAAc,MAMN,2BACIO,KAAK,OACLC,MAAUT,EACVU,SAbK,SAAAP,GAAK,OAAKF,EAAcE,EAAMQ,OAAOF,YCI3CG,EATK,SAAC,GAAsB,IAArBC,EAAoB,EAApBA,GAAGC,EAAiB,EAAjBA,MAAMC,EAAW,EAAXA,MAC3B,OACC,yBAAKC,UAAY,yCAAyCC,IAAKJ,GAC5D,yBAAKK,IAAKH,IACV,2BAAID,K,uBCWGK,EAjBF,uCAAG,WAAMZ,GAAN,qBAAAa,EAAA,6DAENC,EAFM,iDAEgDd,EAAKe,QAAQ,KAAK,KAFlE,+DAGWC,MAAMF,GAHjB,cAGRG,EAHQ,gBAKWA,EAASC,OALpB,uBAKJC,EALI,EAKJA,KALI,kBAOLA,EAAKC,KAAK,YACb,MAAO,CACHd,GAFkC,EAAtBA,GAGZC,MAHkC,EAAnBA,MAIfC,MAJkC,EAAba,OAIPC,iBAAiBR,SAX3B,2CAAH,sDCKAS,EAAW,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAAe,ECDf,SAACA,GAAc,IAAD,EACXhC,mBAAS,CAC/B2B,KAAM,GACNM,SAAS,IAHwB,mBAC9BC,EAD8B,KACvBC,EADuB,KAsBrC,OAhBAC,qBAAU,WACNhB,EAAQY,GACPK,MAAM,SAAAV,GACHW,YAAW,WACP,OAAQH,EAAU,CACdR,OACAM,SAAS,MAEd,WAIR,CAACD,IAEJO,QAAQC,IAAIN,GAELA,EDnBgBO,CAAYT,GAA5BL,EAF+B,EAE/BA,KAAKM,EAF0B,EAE1BA,QAGZ,OACA,kBAAC,WAAD,KACKA,GAAY,uBAAGhB,UAAU,qCAAb,cACb,wBAAIA,UAAU,qCAAqCe,GACnD,yBAAKf,UAAU,YAEPU,EAAKC,KAAI,SAACc,GAAD,OAAY,kBAAC,EAAgBA,SEVzCC,EAAS,WAAM,IAAD,EAEY3C,mBAAS,IAFrB,mBAEhB4C,EAFgB,KAEL7C,EAFK,KAIzB,OACM,kBAAC,WAAD,KACI,4CACA,kBAAC,EAAD,CAAaA,cAAeA,IAC5B,6BAEQ6C,EAAWhB,KAAK,SAACI,GAAD,OAAc,kBAAC,EAAD,CAASA,SAAUA,S,MCXrEa,IAASC,OAAO,kBAAC,EAAD,MAAYC,SAASC,eAAe,U","file":"static/js/main.98d28588.chunk.js","sourcesContent":["import React,{useState} from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst AddCategory = ({setCategories}) =>{\r\n\r\nconst [inputValue,setInputValue] = useState('')\r\n\r\nconst handleChange = event =>  setInputValue(event.target.value)\r\nconst handleSubmit = event => { \r\n    event.preventDefault()\r\n    if(inputValue.trim().length >= 2) setCategories((item)=> [inputValue,...item])\r\n    setInputValue('')\r\n}\r\n\r\n\r\n    return(\r\n        <form onSubmit = {handleSubmit} >\r\n            <input \r\n                type='text'\r\n                value = { inputValue } \r\n                onChange = {handleChange}                \r\n            />\r\n        </form>\r\n    )\r\n}\r\n\r\nAddCategory.propTypes = { setCategories: PropTypes.func.isRequired}\r\n\r\nexport default AddCategory\r\n\r\n","import React from 'react'\r\n\r\nconst GifGridItem = ({id,title,image}) => {\r\n    return(\r\n     <div className = 'card animate__animated animate__fadeIn' key={id} >\r\n        <img src={image} />\r\n        <p>{title}</p>\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default GifGridItem","const getGifs = async(item)=> {\r\n\r\n    const url      = `https://api.giphy.com/v1/gifs/search?q=${ item.replace(/ /g,'+')}&limit=10&api_key=gNKpt444KSK7cNPpukBEN5qP0qcDCIh4`,\r\n        response   = await fetch(url)\r\n\r\n    const { data } = await response.json()    \r\n\r\n    return data.map( ({ id,title,images }) => {\r\n        return({\r\n            id,\r\n            title,\r\n            image: images.downsized_medium.url\r\n        }\r\n            )\r\n    })\r\n    \r\n}\r\nexport default getGifs","import React,{ Fragment} from 'react'\r\nimport GifGridItem from './GifGridItem'\r\nimport { useGifFetch } from '../hooks/useGifFetch'\r\n\r\n\r\nexport const GifGrid =  ( {category} ) => {\r\n\r\n    const {data,loading} = useGifFetch(category)\r\n\r\n    \r\n    return (\r\n    <Fragment >\r\n        {loading && (<p className='animate__animated animate__fadeIn'>Loading...</p>)}\r\n        <h3 className='animate__animated animate__fadeIn'>{category}</h3>\r\n        <div className='cardGrid'>\r\n            {\r\n                data.map((element)=> <GifGridItem {...element}/>)\r\n            }\r\n        </div>\r\n    </Fragment>\r\n    )\r\n\r\n}\r\n","import {useState,useEffect} from 'react'\r\nimport getGifs from '../helpers/getGifs'\r\n\r\n\r\nexport const useGifFetch = (category) => {\r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true\r\n    })\r\n    \r\n    useEffect(() => {\r\n        getGifs(category)\r\n        .then( data => {\r\n            setTimeout(() => {\r\n                return  setState( {\r\n                    data ,\r\n                    loading: false\r\n                })\r\n            }, 1500);\r\n        }\r\n    )\r\n\r\n    }, [category]) \r\n\r\n    console.log(state)\r\n\r\n    return state\r\n}\r\n","import React,{Fragment,useState} from 'react'\r\nimport AddCategory from './AddCategory'\r\nimport { GifGrid } from './GifGrid'\r\n\r\n\r\n\r\nexport const GifApp = ()=> {\r\n\r\n    const [categories,setCategories] = useState([])\r\n\r\n  return(\r\n        <Fragment>\r\n            <h2>Gif searcher</h2>\r\n            <AddCategory setCategories={setCategories}/>\r\n            <hr/>\r\n               { \r\n                    categories.map( (category) => <GifGrid category={category}/> )\r\n                }\r\n        </Fragment>\r\n    )\r\n}\r\n\r\n\r\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport {GifApp} from './components/GifApp'\nimport './index.css'\n\nReactDOM.render(<GifApp />, document.getElementById('root'))\n"],"sourceRoot":""}